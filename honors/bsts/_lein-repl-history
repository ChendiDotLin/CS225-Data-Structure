(in-ns 'bst.hw)
(prod3 [1 2 3 4])
(in-ns 'bsts.hw)
(prod3 [1 2 3 4])
(prod3 [])
(salary sv "Barny")
(in-ns 'bsts.core)
(add nil 123
)
(add (add nil 123) 20)
(reduce 
)
(reduce add nil '(5 3 7))
(mk-tree '(4 2 6 1 3 5 7))
(show *1)
(show (mk-tree '(4 2 6 1 3 5 7)))
(show (mk-tree (reverse (4 2 6 1 3 5 7))))
(show (mk-tree (reverse '(4 2 6 1 3 5 7))))
(mk-tree '(4 2 6 1 3 5 7))
(show (mk-tree '(4 2 6 1 3 5 7)))
(and nil 1)
(or nil 1)
(def + -)
(+ 10 4)
(ns-unmap 'bsts.core '+)
(+ 1 2)
(require 'clojure.core)
(+  2 3)
(doc -)
(in-ns 'user)
(doc -)
(in-ns 'bst.core)
(- 1 3)
(use 'clojure.core)
(require 'clojure.core)
(< 'a 'b)
(compare 'a 'b)
